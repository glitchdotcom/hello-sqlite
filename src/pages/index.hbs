<!DOCTYPE html>
<html lang="en">
  <head>
    
    <!-- 
      This is the main Handlebars template for the site 
      - When the user visits the homepage or submits a choice the app calls the endpoints in server.js
      - The server script passes data in here and the Handlebars code builds it into the HTML page
    -->
    
    <meta charset="utf-8" />
    <link rel="icon" href="https://glitch.com/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>{{seo.title}}</title>
    
    <!-- Meta tags for SEO and social sharing -->
    <link rel="canonical" href="{{seo.url}}">
    <meta name="description" content="{{seo.description}}">
    <meta property="og:title" content="{{seo.title}}">
    <meta property="og:type" content="article">
    <meta property="og:url" content="{{seo.url}}">
    <meta property="og:description" content="{{seo.description}}">
    <meta property="og:image" content="{{seo.image}}">
    <meta name="twitter:card" content="summary">

    <!-- Import the webpage's stylesheet -->
    <link rel="stylesheet" href="/style.css" />
    
    <!-- Show choice chart on poll submission -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script> 
    <script type="text/javascript">
      /*
      The pie chart uses chart.js - try tweaking the config!
      https://www.chartjs.org/docs/3.0.2/charts/doughnut.html
      */
    function showChart(choices, picks){
      // We pass the choices and picks arrays from the page when the server script returns them
      var ctx = document.getElementById('myChart');
      var myLineChart = new Chart(ctx, {
        type: 'pie',
        data: {
          labels: choices,
          datasets: [{
            data: picks,
            backgroundColor: ["#05DA84", "#E6E656", "#E5AED6"],
            borderColor: "#2800FF",
            fill: true
          }]
        },
        options: {
          legend: { display: false }
        }
      });
    }
    </script>
    
  </head>
  <body>
    <div class="wrapper">
      <div class="content" role="main">
          
        <!-- This is the start of content for our page -->
        <h1>Hello SQLite!</h1>
        
        {{#if error}}
        <p class="error">
          Whoops! Error connecting to the database–please try again!
        </p>
        {{else}}
        <div class="poll-form">
          <p>
            Use an SQLite database with your Node.js app.
          </p>
          <p>
            <em>Enter a preference by sending a POST request to the API!</em>
          </p>
          <!-- Server returns a flag when the user has submitted a choice and we show the results -->
          {{#if picked}}
          <h2>
            Votes
          </h2>
          <p>
            Submissions so far (see the <a href="/logs">Admin</a> page for a log):
          </p>
          <p>
            <!-- Pass choices + picks arrays from the API to the chart js script in the page head -->
            <canvas id="myChart"  height="200"></canvas>
            <script type="text/javascript">
              showChart({{{choices}}}, {{{picks}}});
            </script>
          </p>
          <!-- If the user hasn't already made a choice we show the poll -->
          {{else}}
          <h2>
            Poll
          </h2>
          <p>
            What do you like coding most?
          </p>
          <!-- Call the server pick endpoint when the user submits an option in the poll -->
          <form method="post" action="/pick">
            <!-- The server script returns the list of language options to offer in the poll -->
            {{#each options}}
            <input type="radio" id="{{language}}" name="language" value="{{language}}" required/>
            <label for="{{language}}">{{language}}</label>
            {{/each}}
            <br/><br/>
            <button type="submit">
              Submit
            </button>
          </form>
          {{/if}}
          
        </div>
        {{/if}}
        
        <!-- Instructions on using this project -->
        <div class="instructions">
          <h2>
            Using this project
          </h2>
          <p>
            This is the Glitch <strong>Hello SQLite</strong> project. You can
            use it to build your own app. Check out README.md in the editor for
            more info and next steps you can take!
          </p>
        </div>
        
      </div>
    </div>
    <!-- The footer holds our remix button — you can use it for structure or cut it out ✂ -->
    <footer class="footer">
      <div class="links"></div>
      <a href="/">Home</a>
      <span class="divider">|</span>
      <a href="/logs">Admin</a>
      <a
        class="btn--remix"
        target="_top"
        href="https://glitch.com/edit/#!/remix/hello-sqlite"
      >
        <img
          src="https://cdn.glitch.com/605e2a51-d45f-4d87-a285-9410ad350515%2FLogo_Color.svg?v=1618199565140"
          alt=""
        />
        Remix on Glitch
      </a>
    </footer>
  </body>
</html>
